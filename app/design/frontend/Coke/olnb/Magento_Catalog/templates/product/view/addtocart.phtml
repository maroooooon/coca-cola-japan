<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

/**
 * @var $block \Magento\Catalog\Block\Product\View
 * @var $viewModel \Coke\OLNB\ViewModel\FixedProductTax
 */
?>
<?php $_product = $block->getProduct(); ?>
<?php
    // is katy perry product
    $kpSkus = array(
        'GB-EN-STD330-KP-CZ',
        'GE-GE-SLK330-KP-CZ',
        'NL-NL-STD330-KP-CZ',
        'BE-DU-STD330-KP-CZ',
        'BE-FR-STD330-KP-CZ',
        'NW-NW-SLM250-KP-CZ',
        'IE-EN-SLK330-KP-CZ'
    );
    $isKp = in_array($_product->getSku(), $kpSkus);

    if ($isKp) {
        $buttonTitle = __('Add Katy Perry Can To Cart');
    } else {
        $buttonTitle = __('Add to Cart');
    }
?>

<?php $viewModel = $block->getViewModel(); ?>
<?php $viewModel->setProduct($_product); ?>

<?php if ($_product->isSaleable()) :?>
<div class="box-tocart">
    <div class="info-row">
        <div class="prices-container">
            <?php
                echo $this->getLayout()->
                createBlock('Magento\Catalog\Pricing\Render',
                "product.price.final",
                [
                    'data' => [
                        'price_render' => 'product.price.render.default',
                        'price_type_code' => 'final_price',
                        'zone' => 'item_view'
                    ]
                ]
                )->toHtml();
            ?>

            <?php if ($viewModel->getBottleDepositFpt()): ?>
                <div class="fpt">
                    <span class="label"><?= $block->escapeHtml($viewModel->getBottleDepositLabel()) ?></span>
                    <?= $viewModel->getBottleDepositFpt(); ?>
                </div>
            <?php endif; ?>
        </div>

        <?php if ($block->shouldRenderQuantity()) :?>
        <div class="field qty qty-toggler">
            <div class="control">
                <button type="button" class="button btn-number" data-type="minus">-</button>
                <div class="qty-wrap">
                    <label class="label" for="qty">
                        <span><?= $block->escapeHtml(__('Quantity')) ?></span>
                    </label>
                    <input
                        type="text"
                        name="qty"
                        id="qty"
                        min="1"
                        value="<?= $block->getProductDefaultQty() * 1 ?>"
                        title="<?= $block->escapeHtmlAttr(__('Qty')) ?>"
                        class="input-text qty"
                        data-validate="<?= $block->escapeHtmlAttr(json_encode($block->getQuantityValidators())) ?>"
                    />
                </div>
                <button type="button" class="button btn-number" data-type="plus">+</button>
            </div>
        </div>
        <?php endif; ?>
    </div>

    <div class="actions">
        <button type="submit"
                title="<?= $block->escapeHtmlAttr($buttonTitle) ?>"
                class="action secondary tocart"
                id="product-addtocart-button" disabled>
            <span><?= $block->escapeHtml($buttonTitle) ?></span>
        </button>
        <?= $block->getChildHtml('', true) ?>
    </div>
</div>
<?php endif; ?>
<script type="text/x-magento-init">
    {
        "#product_addtocart_form": {
            "Magento_Catalog/js/validate-product": {}
        }
    }
</script>
<script>
require([
    'jquery',
    'domReady!'
], function ($) {
    var qtyToggler = $('.btn-number');
    var input = $('#qty');
    var minValue = !isNaN(input.attr('min')) ? parseInt(input.attr('min')) : 1;
    var maxValue = !isNaN(input.attr('max')) ? parseInt(input.attr('max')) : 999;

    if (parseInt(input.val()) == minValue) {
        $('*[data-type="minus"]').attr('disabled', true);
    }

    qtyToggler.on('click', function(e) {
        e.preventDefault();

        var fieldName = $(this).attr('data-field');
        var type = $(this).attr('data-type');
        var currentVal = parseInt(input.val());

        if (isNaN(currentVal)) {
            input.val(0);
            return;
        }

        qtyToggler.attr('disabled', false);

        if (type == 'minus') {
            if (currentVal > minValue) {
                input.val(currentVal - 1).change();
            }
            if (parseInt(input.val()) == minValue) {
                $(this).attr('disabled', true);
            }
        } else if (type == 'plus') {
            if (currentVal < maxValue) {
                input.val(currentVal + 1).change();
            }
            if (parseInt(input.val()) == maxValue) {
                $(this).attr('disabled', true);
            }
        }
    });

});
</script>
